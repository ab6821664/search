(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{15:function(t,e,n){"use strict";n.d(e,"e",(function(){return s})),n.d(e,"c",(function(){return a})),n.d(e,"b",(function(){return c})),n.d(e,"a",(function(){return u})),n.d(e,"d",(function(){return l}));var r=n(14),o=n.n(r),i="http://106.12.103.25:9090",s=function(){var t=new Date,e=t.getMonth()+1>9?t.getMonth()+1:"0"+(t.getMonth()+1),n=t.getDate()>9?t.getDate():"0"+t.getDate(),r=t.getFullYear()+""+e+n,s="".concat(i,"/home/add/").concat(r);o.a.get(s).then((function(){sessionStorage.setItem("id",r)}))},a=function(t){return new Promise((function(e,n){var r="".concat(i,"/home/adduser");o.a.post(r,t).then((function(t){e(t)})).catch((function(t){n(t)}))}))},c=function(t){return new Promise((function(e,n){var r="".concat(i,"/home/queryuser");o.a.post(r,t).then((function(t){e(t)})).catch((function(t){n(t)}))}))},u=function(t){return new Promise((function(e,n){var r="".concat(i,"/home/login");o.a.post(r,t).then((function(t){e(t)})).catch((function(t){n(t)}))}))},l=function(t){return new Promise((function(e,n){var r="".concat(i,"/home/spend");o.a.post(r,t).then((function(t){e(t)})).catch((function(t){n(t)}))}))}},16:function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"c",(function(){return s})),n.d(e,"b",(function(){return a}));var r=n(14),o=n.n(r);function i(t){return o.a.get("".concat("http://106.12.103.25:8000","/searchGoods?goodsId=").concat(t))}function s(t){return o.a.post("".concat("http://106.12.103.25:8000","/commitBuyService"),t)}function a(t){return o.a.post("".concat("http://localhost:3001","/recharge"),t)}},17:function(t,e){var n={utf8:{stringToBytes:function(t){return n.bin.stringToBytes(unescape(encodeURIComponent(t)))},bytesToString:function(t){return decodeURIComponent(escape(n.bin.bytesToString(t)))}},bin:{stringToBytes:function(t){for(var e=[],n=0;n<t.length;n++)e.push(255&t.charCodeAt(n));return e},bytesToString:function(t){for(var e=[],n=0;n<t.length;n++)e.push(String.fromCharCode(t[n]));return e.join("")}}};t.exports=n},20:function(t,e,n){var r,o,i,s,a;r=n(21),o=n(17).utf8,i=n(22),s=n(17).bin,(a=function(t,e){t.constructor==String?t=e&&"binary"===e.encoding?s.stringToBytes(t):o.stringToBytes(t):i(t)?t=Array.prototype.slice.call(t,0):Array.isArray(t)||(t=t.toString());for(var n=r.bytesToWords(t),c=8*t.length,u=1732584193,l=-271733879,f=-1732584194,g=271733878,h=0;h<n.length;h++)n[h]=16711935&(n[h]<<8|n[h]>>>24)|4278255360&(n[h]<<24|n[h]>>>8);n[c>>>5]|=128<<c%32,n[14+(c+64>>>9<<4)]=c;var d=a._ff,p=a._gg,v=a._hh,m=a._ii;for(h=0;h<n.length;h+=16){var y=u,_=l,w=f,b=g;u=d(u,l,f,g,n[h+0],7,-680876936),g=d(g,u,l,f,n[h+1],12,-389564586),f=d(f,g,u,l,n[h+2],17,606105819),l=d(l,f,g,u,n[h+3],22,-1044525330),u=d(u,l,f,g,n[h+4],7,-176418897),g=d(g,u,l,f,n[h+5],12,1200080426),f=d(f,g,u,l,n[h+6],17,-1473231341),l=d(l,f,g,u,n[h+7],22,-45705983),u=d(u,l,f,g,n[h+8],7,1770035416),g=d(g,u,l,f,n[h+9],12,-1958414417),f=d(f,g,u,l,n[h+10],17,-42063),l=d(l,f,g,u,n[h+11],22,-1990404162),u=d(u,l,f,g,n[h+12],7,1804603682),g=d(g,u,l,f,n[h+13],12,-40341101),f=d(f,g,u,l,n[h+14],17,-1502002290),u=p(u,l=d(l,f,g,u,n[h+15],22,1236535329),f,g,n[h+1],5,-165796510),g=p(g,u,l,f,n[h+6],9,-1069501632),f=p(f,g,u,l,n[h+11],14,643717713),l=p(l,f,g,u,n[h+0],20,-373897302),u=p(u,l,f,g,n[h+5],5,-701558691),g=p(g,u,l,f,n[h+10],9,38016083),f=p(f,g,u,l,n[h+15],14,-660478335),l=p(l,f,g,u,n[h+4],20,-405537848),u=p(u,l,f,g,n[h+9],5,568446438),g=p(g,u,l,f,n[h+14],9,-1019803690),f=p(f,g,u,l,n[h+3],14,-187363961),l=p(l,f,g,u,n[h+8],20,1163531501),u=p(u,l,f,g,n[h+13],5,-1444681467),g=p(g,u,l,f,n[h+2],9,-51403784),f=p(f,g,u,l,n[h+7],14,1735328473),u=v(u,l=p(l,f,g,u,n[h+12],20,-1926607734),f,g,n[h+5],4,-378558),g=v(g,u,l,f,n[h+8],11,-2022574463),f=v(f,g,u,l,n[h+11],16,1839030562),l=v(l,f,g,u,n[h+14],23,-35309556),u=v(u,l,f,g,n[h+1],4,-1530992060),g=v(g,u,l,f,n[h+4],11,1272893353),f=v(f,g,u,l,n[h+7],16,-155497632),l=v(l,f,g,u,n[h+10],23,-1094730640),u=v(u,l,f,g,n[h+13],4,681279174),g=v(g,u,l,f,n[h+0],11,-358537222),f=v(f,g,u,l,n[h+3],16,-722521979),l=v(l,f,g,u,n[h+6],23,76029189),u=v(u,l,f,g,n[h+9],4,-640364487),g=v(g,u,l,f,n[h+12],11,-421815835),f=v(f,g,u,l,n[h+15],16,530742520),u=m(u,l=v(l,f,g,u,n[h+2],23,-995338651),f,g,n[h+0],6,-198630844),g=m(g,u,l,f,n[h+7],10,1126891415),f=m(f,g,u,l,n[h+14],15,-1416354905),l=m(l,f,g,u,n[h+5],21,-57434055),u=m(u,l,f,g,n[h+12],6,1700485571),g=m(g,u,l,f,n[h+3],10,-1894986606),f=m(f,g,u,l,n[h+10],15,-1051523),l=m(l,f,g,u,n[h+1],21,-2054922799),u=m(u,l,f,g,n[h+8],6,1873313359),g=m(g,u,l,f,n[h+15],10,-30611744),f=m(f,g,u,l,n[h+6],15,-1560198380),l=m(l,f,g,u,n[h+13],21,1309151649),u=m(u,l,f,g,n[h+4],6,-145523070),g=m(g,u,l,f,n[h+11],10,-1120210379),f=m(f,g,u,l,n[h+2],15,718787259),l=m(l,f,g,u,n[h+9],21,-343485551),u=u+y>>>0,l=l+_>>>0,f=f+w>>>0,g=g+b>>>0}return r.endian([u,l,f,g])})._ff=function(t,e,n,r,o,i,s){var a=t+(e&n|~e&r)+(o>>>0)+s;return(a<<i|a>>>32-i)+e},a._gg=function(t,e,n,r,o,i,s){var a=t+(e&r|n&~r)+(o>>>0)+s;return(a<<i|a>>>32-i)+e},a._hh=function(t,e,n,r,o,i,s){var a=t+(e^n^r)+(o>>>0)+s;return(a<<i|a>>>32-i)+e},a._ii=function(t,e,n,r,o,i,s){var a=t+(n^(e|~r))+(o>>>0)+s;return(a<<i|a>>>32-i)+e},a._blocksize=16,a._digestsize=16,t.exports=function(t,e){if(null==t)throw new Error("Illegal argument "+t);var n=r.wordsToBytes(a(t,e));return e&&e.asBytes?n:e&&e.asString?s.bytesToString(n):r.bytesToHex(n)}},21:function(t,e){var n,r;n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",r={rotl:function(t,e){return t<<e|t>>>32-e},rotr:function(t,e){return t<<32-e|t>>>e},endian:function(t){if(t.constructor==Number)return 16711935&r.rotl(t,8)|4278255360&r.rotl(t,24);for(var e=0;e<t.length;e++)t[e]=r.endian(t[e]);return t},randomBytes:function(t){for(var e=[];t>0;t--)e.push(Math.floor(256*Math.random()));return e},bytesToWords:function(t){for(var e=[],n=0,r=0;n<t.length;n++,r+=8)e[r>>>5]|=t[n]<<24-r%32;return e},wordsToBytes:function(t){for(var e=[],n=0;n<32*t.length;n+=8)e.push(t[n>>>5]>>>24-n%32&255);return e},bytesToHex:function(t){for(var e=[],n=0;n<t.length;n++)e.push((t[n]>>>4).toString(16)),e.push((15&t[n]).toString(16));return e.join("")},hexToBytes:function(t){for(var e=[],n=0;n<t.length;n+=2)e.push(parseInt(t.substr(n,2),16));return e},bytesToBase64:function(t){for(var e=[],r=0;r<t.length;r+=3)for(var o=t[r]<<16|t[r+1]<<8|t[r+2],i=0;i<4;i++)8*r+6*i<=8*t.length?e.push(n.charAt(o>>>6*(3-i)&63)):e.push("=");return e.join("")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\/]/gi,"");for(var e=[],r=0,o=0;r<t.length;o=++r%4)0!=o&&e.push((n.indexOf(t.charAt(r-1))&Math.pow(2,-2*o+8)-1)<<2*o|n.indexOf(t.charAt(r))>>>6-2*o);return e}},t.exports=r},22:function(t,e){function n(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
t.exports=function(t){return null!=t&&(n(t)||function(t){return"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&n(t.slice(0,0))}(t)||!!t._isBuffer)}},59:function(t,e,n){"use strict";n.r(e);var r=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"register"},[t.loginUser?t._e():n("div",[n("div",{staticClass:"item"},[n("label",[t._v("用户名")]),t._v(" "),n("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.user,expression:"user",modifiers:{trim:!0}}],attrs:{type:"text"},domProps:{value:t.user},on:{focus:function(e){t.errorLogin=!1},input:function(e){e.target.composing||(t.user=e.target.value.trim())},blur:function(e){return t.$forceUpdate()}}})]),t._v(" "),n("div",{staticClass:"item"},[n("label",[t._v("密码")]),t._v(" "),n("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.password,expression:"password",modifiers:{trim:!0}}],attrs:{type:"text"},domProps:{value:t.password},on:{focus:function(e){t.errorLogin=!1},input:function(e){e.target.composing||(t.password=e.target.value.trim())},blur:function(e){return t.$forceUpdate()}}})]),t._v(" "),n("div",{directives:[{name:"show",rawName:"v-show",value:t.errorLogin,expression:"errorLogin"}],staticClass:"item",staticStyle:{color:"red"}},[n("p",[t._v("登录失败，账号或者密码错误")])]),t._v(" "),n("div",{staticClass:"item"},[n("button",{staticClass:"mainBtn",on:{click:t.submit}},[t._v("登录")])])]),t._v(" "),t.loginUser?n("div",[n("div",{staticClass:"item"},[n("span",{staticStyle:{display:"inline-block",width:"160px","text-align":"left"}},[t._v("用户名:")]),t._v(" "),n("span",[t._v(t._s(t.loginUser))])]),t._v(" "),n("div",{staticClass:"item"},[n("span",{staticStyle:{display:"inline-block",width:"160px","text-align":"left"}},[t._v("题分:")]),t._v(" "),n("span",[t._v(t._s(t.score))])]),t._v(" "),n("div",{staticClass:"item"},[n("span",{staticStyle:{display:"inline-block",width:"160px","text-align":"left"}},[t._v("到期时间:")]),t._v(" "),n("span",[t._v(t._s(t._f("date")(t.time)))])]),t._v(" "),n("div",{staticClass:"item"},[n("span",{staticStyle:{display:"inline-block",width:"160px","text-align":"left"}},[t._v("卡密:")]),t._v(" "),n("span",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.passCard,expression:"passCard"}],attrs:{placeholder:"微信13715549992购卡或者自助购卡"},domProps:{value:t.passCard},on:{focus:function(e){t.chargeMsgShow=!1},input:function(e){e.target.composing||(t.passCard=e.target.value)}}})])]),t._v(" "),n("div",{staticClass:"item",staticStyle:{color:"red"}},[n("p",{directives:[{name:"show",rawName:"v-show",value:t.chargeMsgShow,expression:"chargeMsgShow"}]},[t._v(t._s(t.chargeMsg))])]),t._v(" "),n("div",{staticStyle:{"margin-top":"40px",display:"flex","justify-content":"space-around"}},[n("button",{staticClass:"plainBtn",on:{click:t.layout}},[t._v("退出登录")]),t._v(" "),n("button",{staticClass:"plainBtn",on:{click:t.toBuy}},[t._v("自助购卡")]),t._v(" "),n("button",{staticClass:"plainBtn",on:{click:t.charge}},[t._v("充值")])])]):t._e()])};r._withStripped=!0;var o=n(15),i=n(16),s=n(20),a=n.n(s),c={name:"login",data:function(){return{user:"",password:"",passCard:"",loginUser:"",errorLogin:!1,chargeMsgShow:!1,chargeMsg:""}},computed:{score:function(){return this.$store.state.score},time:function(){return this.$store.state.time}},created:function(){this.loginUser=localStorage.getItem("user"),this.loginUser&&this.query(this.loginUser)},filters:{date:function(t){if(0==t)return"未充值";var e=new Date(t);return e.getFullYear()+"-"+(e.getMonth()+1)+"-"+e.getDate()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}},methods:{submit:function(){var t=this;Object(o.a)({user:this.user,password:a()(this.password)}).then((function(e){1==e.data?(localStorage.setItem("user",t.user),t.loginUser=t.user,t.query(t.user)):t.errorLogin=!0}))},query:function(t){var e=this;Object(o.b)({user:t}).then((function(t){var n=t.data[0];e.$store.commit("setScore",n.score),e.$store.commit("setTime",n.time),e.$store.commit("setUser",n.user)}))},layout:function(){localStorage.removeItem("user"),this.loginUser="",this.$store.commit("setScore",""),this.$store.commit("setTime",0),this.$store.commit("setUser",0)},charge:function(){var t=this;if(0==this.passCard.length)return this.chargeMsg="卡密不能为空",void(this.chargeMsgShow=!0);Object(i.b)({id:this.passCard,type:(new Date).getTime(),used:this.loginUser}).then((function(e){t.chargeMsg=e.data,t.chargeMsgShow=!0,"充值成功"==e.data&&t.query(t.loginUser)}))},toBuy:function(){this.$router.push("/main/pay")}}},u=n(3),l=Object(u.a)(c,r,[],!1,null,"77c14c32",null);l.options.__file="src/view/login/login.vue";e.default=l.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,