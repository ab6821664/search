(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{15:function(t,r,e){"use strict";e.d(r,"e",(function(){return i})),e.d(r,"c",(function(){return a})),e.d(r,"b",(function(){return u})),e.d(r,"a",(function(){return c})),e.d(r,"d",(function(){return f}));var n=e(14),o=e.n(n),s="http://106.12.103.25:9090",i=function(){var t=new Date,r=t.getMonth()+1>9?t.getMonth()+1:"0"+(t.getMonth()+1),e=t.getDate()>9?t.getDate():"0"+t.getDate(),n=t.getFullYear()+""+r+e,i="".concat(s,"/home/add/").concat(n);o.a.get(i).then((function(){sessionStorage.setItem("id",n)}))},a=function(t){return new Promise((function(r,e){var n="".concat(s,"/home/adduser");o.a.post(n,t).then((function(t){r(t)})).catch((function(t){e(t)}))}))},u=function(t){return new Promise((function(r,e){var n="".concat(s,"/home/queryuser");o.a.post(n,t).then((function(t){r(t)})).catch((function(t){e(t)}))}))},c=function(t){return new Promise((function(r,e){var n="".concat(s,"/home/login");o.a.post(n,t).then((function(t){r(t)})).catch((function(t){e(t)}))}))},f=function(t){return new Promise((function(r,e){var n="".concat(s,"/home/spend");o.a.post(n,t).then((function(t){r(t)})).catch((function(t){e(t)}))}))}},17:function(t,r){var e={utf8:{stringToBytes:function(t){return e.bin.stringToBytes(unescape(encodeURIComponent(t)))},bytesToString:function(t){return decodeURIComponent(escape(e.bin.bytesToString(t)))}},bin:{stringToBytes:function(t){for(var r=[],e=0;e<t.length;e++)r.push(255&t.charCodeAt(e));return r},bytesToString:function(t){for(var r=[],e=0;e<t.length;e++)r.push(String.fromCharCode(t[e]));return r.join("")}}};t.exports=e},20:function(t,r,e){var n,o,s,i,a;n=e(21),o=e(17).utf8,s=e(22),i=e(17).bin,(a=function(t,r){t.constructor==String?t=r&&"binary"===r.encoding?i.stringToBytes(t):o.stringToBytes(t):s(t)?t=Array.prototype.slice.call(t,0):Array.isArray(t)||(t=t.toString());for(var e=n.bytesToWords(t),u=8*t.length,c=1732584193,f=-271733879,p=-1732584194,d=271733878,l=0;l<e.length;l++)e[l]=16711935&(e[l]<<8|e[l]>>>24)|4278255360&(e[l]<<24|e[l]>>>8);e[u>>>5]|=128<<u%32,e[14+(u+64>>>9<<4)]=u;var v=a._ff,h=a._gg,g=a._hh,m=a._ii;for(l=0;l<e.length;l+=16){var w=c,_=f,y=p,b=d;c=v(c,f,p,d,e[l+0],7,-680876936),d=v(d,c,f,p,e[l+1],12,-389564586),p=v(p,d,c,f,e[l+2],17,606105819),f=v(f,p,d,c,e[l+3],22,-1044525330),c=v(c,f,p,d,e[l+4],7,-176418897),d=v(d,c,f,p,e[l+5],12,1200080426),p=v(p,d,c,f,e[l+6],17,-1473231341),f=v(f,p,d,c,e[l+7],22,-45705983),c=v(c,f,p,d,e[l+8],7,1770035416),d=v(d,c,f,p,e[l+9],12,-1958414417),p=v(p,d,c,f,e[l+10],17,-42063),f=v(f,p,d,c,e[l+11],22,-1990404162),c=v(c,f,p,d,e[l+12],7,1804603682),d=v(d,c,f,p,e[l+13],12,-40341101),p=v(p,d,c,f,e[l+14],17,-1502002290),c=h(c,f=v(f,p,d,c,e[l+15],22,1236535329),p,d,e[l+1],5,-165796510),d=h(d,c,f,p,e[l+6],9,-1069501632),p=h(p,d,c,f,e[l+11],14,643717713),f=h(f,p,d,c,e[l+0],20,-373897302),c=h(c,f,p,d,e[l+5],5,-701558691),d=h(d,c,f,p,e[l+10],9,38016083),p=h(p,d,c,f,e[l+15],14,-660478335),f=h(f,p,d,c,e[l+4],20,-405537848),c=h(c,f,p,d,e[l+9],5,568446438),d=h(d,c,f,p,e[l+14],9,-1019803690),p=h(p,d,c,f,e[l+3],14,-187363961),f=h(f,p,d,c,e[l+8],20,1163531501),c=h(c,f,p,d,e[l+13],5,-1444681467),d=h(d,c,f,p,e[l+2],9,-51403784),p=h(p,d,c,f,e[l+7],14,1735328473),c=g(c,f=h(f,p,d,c,e[l+12],20,-1926607734),p,d,e[l+5],4,-378558),d=g(d,c,f,p,e[l+8],11,-2022574463),p=g(p,d,c,f,e[l+11],16,1839030562),f=g(f,p,d,c,e[l+14],23,-35309556),c=g(c,f,p,d,e[l+1],4,-1530992060),d=g(d,c,f,p,e[l+4],11,1272893353),p=g(p,d,c,f,e[l+7],16,-155497632),f=g(f,p,d,c,e[l+10],23,-1094730640),c=g(c,f,p,d,e[l+13],4,681279174),d=g(d,c,f,p,e[l+0],11,-358537222),p=g(p,d,c,f,e[l+3],16,-722521979),f=g(f,p,d,c,e[l+6],23,76029189),c=g(c,f,p,d,e[l+9],4,-640364487),d=g(d,c,f,p,e[l+12],11,-421815835),p=g(p,d,c,f,e[l+15],16,530742520),c=m(c,f=g(f,p,d,c,e[l+2],23,-995338651),p,d,e[l+0],6,-198630844),d=m(d,c,f,p,e[l+7],10,1126891415),p=m(p,d,c,f,e[l+14],15,-1416354905),f=m(f,p,d,c,e[l+5],21,-57434055),c=m(c,f,p,d,e[l+12],6,1700485571),d=m(d,c,f,p,e[l+3],10,-1894986606),p=m(p,d,c,f,e[l+10],15,-1051523),f=m(f,p,d,c,e[l+1],21,-2054922799),c=m(c,f,p,d,e[l+8],6,1873313359),d=m(d,c,f,p,e[l+15],10,-30611744),p=m(p,d,c,f,e[l+6],15,-1560198380),f=m(f,p,d,c,e[l+13],21,1309151649),c=m(c,f,p,d,e[l+4],6,-145523070),d=m(d,c,f,p,e[l+11],10,-1120210379),p=m(p,d,c,f,e[l+2],15,718787259),f=m(f,p,d,c,e[l+9],21,-343485551),c=c+w>>>0,f=f+_>>>0,p=p+y>>>0,d=d+b>>>0}return n.endian([c,f,p,d])})._ff=function(t,r,e,n,o,s,i){var a=t+(r&e|~r&n)+(o>>>0)+i;return(a<<s|a>>>32-s)+r},a._gg=function(t,r,e,n,o,s,i){var a=t+(r&n|e&~n)+(o>>>0)+i;return(a<<s|a>>>32-s)+r},a._hh=function(t,r,e,n,o,s,i){var a=t+(r^e^n)+(o>>>0)+i;return(a<<s|a>>>32-s)+r},a._ii=function(t,r,e,n,o,s,i){var a=t+(e^(r|~n))+(o>>>0)+i;return(a<<s|a>>>32-s)+r},a._blocksize=16,a._digestsize=16,t.exports=function(t,r){if(null==t)throw new Error("Illegal argument "+t);var e=n.wordsToBytes(a(t,r));return r&&r.asBytes?e:r&&r.asString?i.bytesToString(e):n.bytesToHex(e)}},21:function(t,r){var e,n;e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",n={rotl:function(t,r){return t<<r|t>>>32-r},rotr:function(t,r){return t<<32-r|t>>>r},endian:function(t){if(t.constructor==Number)return 16711935&n.rotl(t,8)|4278255360&n.rotl(t,24);for(var r=0;r<t.length;r++)t[r]=n.endian(t[r]);return t},randomBytes:function(t){for(var r=[];t>0;t--)r.push(Math.floor(256*Math.random()));return r},bytesToWords:function(t){for(var r=[],e=0,n=0;e<t.length;e++,n+=8)r[n>>>5]|=t[e]<<24-n%32;return r},wordsToBytes:function(t){for(var r=[],e=0;e<32*t.length;e+=8)r.push(t[e>>>5]>>>24-e%32&255);return r},bytesToHex:function(t){for(var r=[],e=0;e<t.length;e++)r.push((t[e]>>>4).toString(16)),r.push((15&t[e]).toString(16));return r.join("")},hexToBytes:function(t){for(var r=[],e=0;e<t.length;e+=2)r.push(parseInt(t.substr(e,2),16));return r},bytesToBase64:function(t){for(var r=[],n=0;n<t.length;n+=3)for(var o=t[n]<<16|t[n+1]<<8|t[n+2],s=0;s<4;s++)8*n+6*s<=8*t.length?r.push(e.charAt(o>>>6*(3-s)&63)):r.push("=");return r.join("")},base64ToBytes:function(t){t=t.replace(/[^A-Z0-9+\/]/gi,"");for(var r=[],n=0,o=0;n<t.length;o=++n%4)0!=o&&r.push((e.indexOf(t.charAt(n-1))&Math.pow(2,-2*o+8)-1)<<2*o|e.indexOf(t.charAt(n))>>>6-2*o);return r}},t.exports=n},22:function(t,r){function e(t){return!!t.constructor&&"function"==typeof t.constructor.isBuffer&&t.constructor.isBuffer(t)}
/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
t.exports=function(t){return null!=t&&(e(t)||function(t){return"function"==typeof t.readFloatLE&&"function"==typeof t.slice&&e(t.slice(0,0))}(t)||!!t._isBuffer)}},58:function(t,r,e){"use strict";e.r(r);var n=function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("div",{staticClass:"register"},[e("div",{staticClass:"item"},[e("label",[t._v("用户名")]),t._v(" "),e("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.user,expression:"user",modifiers:{trim:!0}}],attrs:{type:"text"},domProps:{value:t.user},on:{focus:function(r){t.userWarn=!1},input:function(r){r.target.composing||(t.user=r.target.value.trim())},blur:function(r){return t.$forceUpdate()}}})]),t._v(" "),e("p",{directives:[{name:"show",rawName:"v-show",value:t.userWarn,expression:"userWarn"}]},[t._v("用户名不能为空")]),t._v(" "),e("div",{staticClass:"item"},[e("label",[t._v("密码")]),t._v(" "),e("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.password,expression:"password",modifiers:{trim:!0}}],attrs:{type:"text"},domProps:{value:t.password},on:{focus:function(r){t.passwordWarn=!1},input:function(r){r.target.composing||(t.password=r.target.value.trim())},blur:function(r){return t.$forceUpdate()}}})]),t._v(" "),e("p",{directives:[{name:"show",rawName:"v-show",value:t.passwordWarn,expression:"passwordWarn"}]},[t._v("密码不能少于6位数")]),t._v(" "),e("div",{staticClass:"item"},[e("label",[t._v("重复密码")]),t._v(" "),e("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.repassword,expression:"repassword",modifiers:{trim:!0}}],attrs:{type:"text"},domProps:{value:t.repassword},on:{focus:function(r){t.repasswordWarn=!1},input:function(r){r.target.composing||(t.repassword=r.target.value.trim())},blur:function(r){return t.$forceUpdate()}}})]),t._v(" "),e("p",{directives:[{name:"show",rawName:"v-show",value:t.repasswordWarn,expression:"repasswordWarn"}]},[t._v("两次密码不一致")]),t._v(" "),e("p",{directives:[{name:"show",rawName:"v-show",value:t.registerResult,expression:"registerResult"}]},[t._v(t._s(t.registerMsg))]),t._v(" "),e("div",{staticClass:"item"},[e("button",{staticClass:"mainBtn",on:{click:t.register}},[t._v("注册")])])])};n._withStripped=!0;var o=e(15),s=e(20),i=e.n(s),a={name:"register",data:function(){return{user:"",password:"",repassword:"",userWarn:!1,passwordWarn:!1,repasswordWarn:!1,registerResult:!1,registerMsg:""}},methods:{register:function(){var t=this;0!=this.user.length?this.password.length<6?this.passwordWarn=!0:this.password==this.repassword?Object(o.c)({user:this.user,password:i()(this.password)}).then((function(r){if(t.registerResult=!0,1==r.data){t.registerMsg="注册成功，2秒后即将跳转首页",localStorage.setItem("user",t.user),t.$store.commit("setUser",t.user);var e=t;setTimeout((function(){e.$router.push("/main/home")}),2e3)}else t.registerMsg="注册失败，用户名已经被占用"})):this.repasswordWarn=!0:this.userWarn=!0}}},u=e(3),c=Object(u.a)(a,n,[],!1,null,"16ec403e",null);c.options.__file="src/view/register/register.vue";r.default=c.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,