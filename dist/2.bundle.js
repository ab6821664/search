(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{14:function(t,e,r){"use strict";r.d(e,"e",(function(){return s})),r.d(e,"c",(function(){return a})),r.d(e,"b",(function(){return c})),r.d(e,"a",(function(){return u})),r.d(e,"d",(function(){return l}));var n=r(15),i=r.n(n),o="http://106.12.103.25:9090",s=function(){var t=new Date,e=t.getMonth()+1>9?t.getMonth()+1:"0"+(t.getMonth()+1),r=t.getDate()>9?t.getDate():"0"+t.getDate(),n=t.getFullYear()+""+e+r,s="".concat(o,"/home/add/").concat(n);i.a.get(s).then((function(){sessionStorage.setItem("id",n)}))},a=function(t){return new Promise((function(e,r){var n="".concat(o,"/home/adduser");i.a.post(n,t).then((function(t){e(t)})).catch((function(t){r(t)}))}))},c=function(t){return new Promise((function(e,r){var n="".concat(o,"/home/queryuser");i.a.post(n,t).then((function(t){e(t)})).catch((function(t){r(t)}))}))},u=function(t){return new Promise((function(e,r){var n="".concat(o,"/home/login");i.a.post(n,t).then((function(t){e(t)})).catch((function(t){r(t)}))}))},l=function(t){return new Promise((function(e,r){var n="".concat(o,"/home/spend");i.a.post(n,t).then((function(t){e(t)})).catch((function(t){r(t)}))}))}},17:function(t,e,r){"use strict";r.d(e,"a",(function(){return s})),r.d(e,"c",(function(){return a})),r.d(e,"b",(function(){return c}));var n=r(15),i=r.n(n),o="http://106.12.103.25:8000";function s(t){return i.a.get("".concat(o,"/searchGoods?goodsId=").concat(t))}function a(t){return i.a.post("".concat(o,"/commitBuyService"),t)}function c(t){return i.a.post("".concat(o,"/recharge"),t)}},18:function(t,e,r){"use strict";var n=Object.prototype.hasOwnProperty,i=Array.isArray,o=function(){for(var t=[],e=0;e<256;++e)t.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return t}(),s=function(t,e){for(var r=e&&e.plainObjects?Object.create(null):{},n=0;n<t.length;++n)void 0!==t[n]&&(r[n]=t[n]);return r};t.exports={arrayToObject:s,assign:function(t,e){return Object.keys(e).reduce((function(t,r){return t[r]=e[r],t}),t)},combine:function(t,e){return[].concat(t,e)},compact:function(t){for(var e=[{obj:{o:t},prop:"o"}],r=[],n=0;n<e.length;++n)for(var o=e[n],s=o.obj[o.prop],a=Object.keys(s),c=0;c<a.length;++c){var u=a[c],l=s[u];"object"==typeof l&&null!==l&&-1===r.indexOf(l)&&(e.push({obj:s,prop:u}),r.push(l))}return function(t){for(;t.length>1;){var e=t.pop(),r=e.obj[e.prop];if(i(r)){for(var n=[],o=0;o<r.length;++o)void 0!==r[o]&&n.push(r[o]);e.obj[e.prop]=n}}}(e),t},decode:function(t,e,r){var n=t.replace(/\+/g," ");if("iso-8859-1"===r)return n.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(n)}catch(t){return n}},encode:function(t,e,r){if(0===t.length)return t;var n=t;if("symbol"==typeof t?n=Symbol.prototype.toString.call(t):"string"!=typeof t&&(n=String(t)),"iso-8859-1"===r)return escape(n).replace(/%u[0-9a-f]{4}/gi,(function(t){return"%26%23"+parseInt(t.slice(2),16)+"%3B"}));for(var i="",s=0;s<n.length;++s){var a=n.charCodeAt(s);45===a||46===a||95===a||126===a||a>=48&&a<=57||a>=65&&a<=90||a>=97&&a<=122?i+=n.charAt(s):a<128?i+=o[a]:a<2048?i+=o[192|a>>6]+o[128|63&a]:a<55296||a>=57344?i+=o[224|a>>12]+o[128|a>>6&63]+o[128|63&a]:(s+=1,a=65536+((1023&a)<<10|1023&n.charCodeAt(s)),i+=o[240|a>>18]+o[128|a>>12&63]+o[128|a>>6&63]+o[128|63&a])}return i},isBuffer:function(t){return!(!t||"object"!=typeof t)&&!!(t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer(t))},isRegExp:function(t){return"[object RegExp]"===Object.prototype.toString.call(t)},maybeMap:function(t,e){if(i(t)){for(var r=[],n=0;n<t.length;n+=1)r.push(e(t[n]));return r}return e(t)},merge:function t(e,r,o){if(!r)return e;if("object"!=typeof r){if(i(e))e.push(r);else{if(!e||"object"!=typeof e)return[e,r];(o&&(o.plainObjects||o.allowPrototypes)||!n.call(Object.prototype,r))&&(e[r]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(r);var a=e;return i(e)&&!i(r)&&(a=s(e,o)),i(e)&&i(r)?(r.forEach((function(r,i){if(n.call(e,i)){var s=e[i];s&&"object"==typeof s&&r&&"object"==typeof r?e[i]=t(s,r,o):e.push(r)}else e[i]=r})),e):Object.keys(r).reduce((function(e,i){var s=r[i];return n.call(e,i)?e[i]=t(e[i],s,o):e[i]=s,e}),a)}}},30:function(t,e,r){"use strict";var n=String.prototype.replace,i=/%20/g,o=r(18),s={RFC1738:"RFC1738",RFC3986:"RFC3986"};t.exports=o.assign({default:s.RFC3986,formatters:{RFC1738:function(t){return n.call(t,i,"+")},RFC3986:function(t){return String(t)}}},s)},47:function(t,e,r){"use strict";var n=r(48),i=r(49),o=r(30);t.exports={formats:o,parse:i,stringify:n}},48:function(t,e,r){"use strict";var n=r(18),i=r(30),o=Object.prototype.hasOwnProperty,s={brackets:function(t){return t+"[]"},comma:"comma",indices:function(t,e){return t+"["+e+"]"},repeat:function(t){return t}},a=Array.isArray,c=Array.prototype.push,u=function(t,e){c.apply(t,a(e)?e:[e])},l=Date.prototype.toISOString,p=i.default,f={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:n.encode,encodeValuesOnly:!1,format:p,formatter:i.formatters[p],indices:!1,serializeDate:function(t){return l.call(t)},skipNulls:!1,strictNullHandling:!1},d=function t(e,r,i,o,s,c,l,p,d,h,y,g,m){var v,b=e;if("function"==typeof l?b=l(r,b):b instanceof Date?b=h(b):"comma"===i&&a(b)&&(b=n.maybeMap(b,(function(t){return t instanceof Date?h(t):t})).join(",")),null===b){if(o)return c&&!g?c(r,f.encoder,m,"key"):r;b=""}if("string"==typeof(v=b)||"number"==typeof v||"boolean"==typeof v||"symbol"==typeof v||"bigint"==typeof v||n.isBuffer(b))return c?[y(g?r:c(r,f.encoder,m,"key"))+"="+y(c(b,f.encoder,m,"value"))]:[y(r)+"="+y(String(b))];var w,_=[];if(void 0===b)return _;if(a(l))w=l;else{var S=Object.keys(b);w=p?S.sort(p):S}for(var O=0;O<w.length;++O){var j=w[O],x=b[j];if(!s||null!==x){var T=a(b)?"function"==typeof i?i(r,j):r:r+(d?"."+j:"["+j+"]");u(_,t(x,T,i,o,s,c,l,p,d,h,y,g,m))}}return _};t.exports=function(t,e){var r,n=t,c=function(t){if(!t)return f;if(null!==t.encoder&&void 0!==t.encoder&&"function"!=typeof t.encoder)throw new TypeError("Encoder has to be a function.");var e=t.charset||f.charset;if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var r=i.default;if(void 0!==t.format){if(!o.call(i.formatters,t.format))throw new TypeError("Unknown format option provided.");r=t.format}var n=i.formatters[r],s=f.filter;return("function"==typeof t.filter||a(t.filter))&&(s=t.filter),{addQueryPrefix:"boolean"==typeof t.addQueryPrefix?t.addQueryPrefix:f.addQueryPrefix,allowDots:void 0===t.allowDots?f.allowDots:!!t.allowDots,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:f.charsetSentinel,delimiter:void 0===t.delimiter?f.delimiter:t.delimiter,encode:"boolean"==typeof t.encode?t.encode:f.encode,encoder:"function"==typeof t.encoder?t.encoder:f.encoder,encodeValuesOnly:"boolean"==typeof t.encodeValuesOnly?t.encodeValuesOnly:f.encodeValuesOnly,filter:s,formatter:n,serializeDate:"function"==typeof t.serializeDate?t.serializeDate:f.serializeDate,skipNulls:"boolean"==typeof t.skipNulls?t.skipNulls:f.skipNulls,sort:"function"==typeof t.sort?t.sort:null,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:f.strictNullHandling}}(e);"function"==typeof c.filter?n=(0,c.filter)("",n):a(c.filter)&&(r=c.filter);var l,p=[];if("object"!=typeof n||null===n)return"";l=e&&e.arrayFormat in s?e.arrayFormat:e&&"indices"in e?e.indices?"indices":"repeat":"indices";var h=s[l];r||(r=Object.keys(n)),c.sort&&r.sort(c.sort);for(var y=0;y<r.length;++y){var g=r[y];c.skipNulls&&null===n[g]||u(p,d(n[g],g,h,c.strictNullHandling,c.skipNulls,c.encode?c.encoder:null,c.filter,c.sort,c.allowDots,c.serializeDate,c.formatter,c.encodeValuesOnly,c.charset))}var m=p.join(c.delimiter),v=!0===c.addQueryPrefix?"?":"";return c.charsetSentinel&&("iso-8859-1"===c.charset?v+="utf8=%26%2310003%3B&":v+="utf8=%E2%9C%93&"),m.length>0?v+m:""}},49:function(t,e,r){"use strict";var n=r(18),i=Object.prototype.hasOwnProperty,o=Array.isArray,s={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:n.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},a=function(t){return t.replace(/&#(\d+);/g,(function(t,e){return String.fromCharCode(parseInt(e,10))}))},c=function(t,e){return t&&"string"==typeof t&&e.comma&&t.indexOf(",")>-1?t.split(","):t},u=function(t,e,r,n){if(t){var o=r.allowDots?t.replace(/\.([^.[]+)/g,"[$1]"):t,s=/(\[[^[\]]*])/g,a=r.depth>0&&/(\[[^[\]]*])/.exec(o),u=a?o.slice(0,a.index):o,l=[];if(u){if(!r.plainObjects&&i.call(Object.prototype,u)&&!r.allowPrototypes)return;l.push(u)}for(var p=0;r.depth>0&&null!==(a=s.exec(o))&&p<r.depth;){if(p+=1,!r.plainObjects&&i.call(Object.prototype,a[1].slice(1,-1))&&!r.allowPrototypes)return;l.push(a[1])}return a&&l.push("["+o.slice(a.index)+"]"),function(t,e,r,n){for(var i=n?e:c(e,r),o=t.length-1;o>=0;--o){var s,a=t[o];if("[]"===a&&r.parseArrays)s=[].concat(i);else{s=r.plainObjects?Object.create(null):{};var u="["===a.charAt(0)&&"]"===a.charAt(a.length-1)?a.slice(1,-1):a,l=parseInt(u,10);r.parseArrays||""!==u?!isNaN(l)&&a!==u&&String(l)===u&&l>=0&&r.parseArrays&&l<=r.arrayLimit?(s=[])[l]=i:s[u]=i:s={0:i}}i=s}return i}(l,e,r,n)}};t.exports=function(t,e){var r=function(t){if(!t)return s;if(null!==t.decoder&&void 0!==t.decoder&&"function"!=typeof t.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==t.charset&&"utf-8"!==t.charset&&"iso-8859-1"!==t.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var e=void 0===t.charset?s.charset:t.charset;return{allowDots:void 0===t.allowDots?s.allowDots:!!t.allowDots,allowPrototypes:"boolean"==typeof t.allowPrototypes?t.allowPrototypes:s.allowPrototypes,arrayLimit:"number"==typeof t.arrayLimit?t.arrayLimit:s.arrayLimit,charset:e,charsetSentinel:"boolean"==typeof t.charsetSentinel?t.charsetSentinel:s.charsetSentinel,comma:"boolean"==typeof t.comma?t.comma:s.comma,decoder:"function"==typeof t.decoder?t.decoder:s.decoder,delimiter:"string"==typeof t.delimiter||n.isRegExp(t.delimiter)?t.delimiter:s.delimiter,depth:"number"==typeof t.depth||!1===t.depth?+t.depth:s.depth,ignoreQueryPrefix:!0===t.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof t.interpretNumericEntities?t.interpretNumericEntities:s.interpretNumericEntities,parameterLimit:"number"==typeof t.parameterLimit?t.parameterLimit:s.parameterLimit,parseArrays:!1!==t.parseArrays,plainObjects:"boolean"==typeof t.plainObjects?t.plainObjects:s.plainObjects,strictNullHandling:"boolean"==typeof t.strictNullHandling?t.strictNullHandling:s.strictNullHandling}}(e);if(""===t||null==t)return r.plainObjects?Object.create(null):{};for(var l="string"==typeof t?function(t,e){var r,u={},l=e.ignoreQueryPrefix?t.replace(/^\?/,""):t,p=e.parameterLimit===1/0?void 0:e.parameterLimit,f=l.split(e.delimiter,p),d=-1,h=e.charset;if(e.charsetSentinel)for(r=0;r<f.length;++r)0===f[r].indexOf("utf8=")&&("utf8=%E2%9C%93"===f[r]?h="utf-8":"utf8=%26%2310003%3B"===f[r]&&(h="iso-8859-1"),d=r,r=f.length);for(r=0;r<f.length;++r)if(r!==d){var y,g,m=f[r],v=m.indexOf("]="),b=-1===v?m.indexOf("="):v+1;-1===b?(y=e.decoder(m,s.decoder,h,"key"),g=e.strictNullHandling?null:""):(y=e.decoder(m.slice(0,b),s.decoder,h,"key"),g=n.maybeMap(c(m.slice(b+1),e),(function(t){return e.decoder(t,s.decoder,h,"value")}))),g&&e.interpretNumericEntities&&"iso-8859-1"===h&&(g=a(g)),m.indexOf("[]=")>-1&&(g=o(g)?[g]:g),i.call(u,y)?u[y]=n.combine(u[y],g):u[y]=g}return u}(t,r):t,p=r.plainObjects?Object.create(null):{},f=Object.keys(l),d=0;d<f.length;++d){var h=f[d],y=u(h,l[h],r,"string"==typeof t);p=n.merge(p,y,r)}return n.compact(p)}},53:function(t,e,r){"use strict";r.r(e);var n=function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"tlbbMain"},[t._m(0),t._v(" "),r("div",{staticClass:"buySection"},[r("div",{staticClass:"title",attrs:{title:"在输入框输入需要抢购的商品号，点击确认即可自动抢购"}},[t._v("\n               公示区秒杀\n           ")]),t._v(" "),r("div",{staticClass:"shoppingIdWrap"},[r("div",[t._m(1),t._v(" "),r("label",[t._v("天龙账号sid")]),t._v(" "),r("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.sid,expression:"sid",modifiers:{trim:!0}}],staticClass:"shoppingId",attrs:{type:"text",title:"sid的有效期为半小时",placeholder:"请输入畅易阁登录的天龙账号对应的sid"},domProps:{value:t.sid},on:{focus:function(e){t.buyTipsShow=!1},input:function(e){e.target.composing||(t.sid=e.target.value.trim())},blur:function(e){return t.$forceUpdate()}}}),t._v(" "),r("span",{staticStyle:{color:"#4b54ff",cursor:"pointer"},attrs:{title:"sid怎么得到，点击获取帮助"},on:{click:t.goHelp}},[t._v("怎么获取sid？")])]),t._v(" "),r("div",{staticStyle:{"margin-top":"30px"}},[r("label",{staticStyle:{"padding-right":"44px"}},[t._v("商品号")]),r("input",{directives:[{name:"model",rawName:"v-model.trim",value:t.shoppingId,expression:"shoppingId",modifiers:{trim:!0}}],staticClass:"shoppingId",attrs:{type:"text",placeholder:"请输入需要抢购的角色的商品号"},domProps:{value:t.shoppingId},on:{focus:function(e){t.buyTipsShow=!1},input:function(e){e.target.composing||(t.shoppingId=e.target.value.trim())},blur:function(e){return t.$forceUpdate()}}}),r("button",{on:{click:t.buySubmit}},[t._v("确认抢购")])]),t._v(" "),t.buyTipsShow?r("p",{staticStyle:{color:"red","font-size":"14px"}},[t._v(t._s(t.buyTips))]):t._e()]),t._v(" "),r("div",{directives:[{name:"show",rawName:"v-show",value:!t.buyTipsShow,expression:"!buyTipsShow"}]},[r("div",{staticStyle:{"margin-top":"20px",color:"red"}},[t._v("\n                   "+t._s(t.shoppingMsg.id)+"\n               ")]),t._v(" "),r("div",[t._v("\n                   "+t._s(t.shoppingMsg.msg)),r("span",{staticStyle:{color:"red"}},[t._v(t._s(t._f("showTime")(t.shoppingMsg.time)))]),r("span",{directives:[{name:"show",rawName:"v-show",value:t.shoppingMsg.time,expression:"shoppingMsg.time"}]},[t._v("，时间到了后将会自动下单，抢购成功后，将会在你输入的sid对应的登录畅易阁的天龙账号名下！")])])]),t._v(" "),r("div",{staticStyle:{height:"250px",overflow:"scroll"}},[r("table",{staticClass:"bugLog"},[t._m(2),t._v(" "),r("tr",[r("td",{staticStyle:{"border-top":"solid 1px #4b54ff",padding:"10px 5px","text-align":"left"}},[t._v("\n                           "+t._s(t.buyLog)+"\n                       ")])])])])]),t._v(" "),t._m(3)])};n._withStripped=!0;var i=r.p+"8001672be6eae954f1696bc8f389bcdc.jpg",o=r(14),s=r(17);r(47),r(15);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function c(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return u(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return u(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function l(t,e){return(l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function p(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=d(t);if(e){var i=d(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return f(this,r)}}function f(t,e){return!e||"object"!==a(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function d(t){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var g={data:function(){return{bannerFeel:i,shoppingId:"",shoppingMsg:{id:"",msg:"",time:""},timer:null,timesSatus:!1,bugLog:[],setIntervalBuyTime:"",buyTimer:"",buyTipsShow:!1,buyTips:"",buyBtnTimer:!0,sid:"",buyLog:"秒杀信息展示："}},name:"home",created:function(){sessionStorage.getItem("id")||Object(o.e)();var t=function(){function t(){h(this,t),this.name="test",this.age=18}var e,r,n;return e=t,(r=[{key:"add",value:function(){this.age++}}])&&y(e.prototype,r),n&&y(e,n),t}(),e=(new t,function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&l(t,e)}(r,t);var e=p(r);function r(){var t;h(this,r),t=e.call(this);var n=[].concat([1,2,3,3,2,6],[3,4,9,9,7,1]),i=c(new Set(n)).reduce((function(t,e){return t+e}));return t.result=i,t}return r}(t));console.log(new e)},beforeDestroy:function(){clearInterval(this.timer)},filters:{showTime:function(t){if("string"==typeof t)return t;var e=Math.floor(t/3600),r=Math.floor((t-3600*e)/60),n=t-3600*e-60*r;function i(t){return 1==t.length?"0"+t:t}return i(e)+"小时"+i(r)+"分钟"+i(n)+"秒"}},methods:{buySubmit:function(){var t=this,e=this;return this.buyLog="秒杀信息展示：",this.shoppingId.length<15||this.shoppingId.length>22?(this.buyTips="请输入正确的商品号",this.buyTipsShow=!0,this.shoppingMsg.id="",void(this.shoppingMsg.msg="")):this.sid.length<22||5!==this.sid.split("-").length?(this.buyTips="请输入正确的sid",this.buyTipsShow=!0,void(this.shoppingMsg.msg="")):void Object(s.a)(this.shoppingId).then((function(r){var n=r.data;if(t.shoppingMsg.id=t.shoppingId,t.bugLog=[],n.expire&&n.success){if(t.shoppingMsg.msg="此商品已经过了公式期，将会自动下单购买此账号.",t.shoppingMsg.time="",localStorage.getItem("user"))t.buy(e.shoppingId,e.sid);else{var i=localStorage.getItem("testTime");if(i&&(i=Number(i)),i&&i>6)return t.buyTipsShow=!0,t.buyTips="体验次数已经用完！",t.shoppingMsg.id="",void(t.shoppingMsg.msg="");t.buy(t.shoppingId,t.sid);var o=i?++i:1;localStorage.setItem("testTime",o)}}else{if(!n.success)return t.buyTipsShow=!0,t.buyTips="请检查商品号是否输入正确",t.shoppingMsg.id="",void(t.shoppingMsg.msg="");var s=t.$store.state.score,a=t.$store.state.time;if(s<1||a<(new Date).getTime())return t.buyTipsShow=!0,t.buyTips="账号未注册或者已经过期",t.shoppingMsg.id="",void(t.shoppingMsg.msg="");var c=n.msg,u=new Object;u.detail=c;var l=n.time,p=l.indexOf("天")>-1?864e5*l.substr(l.indexOf("天")-2,2):0,f=l.indexOf("小时")>-1?36e5*l.substr(l.indexOf("小时")-2,2):0,d=l.indexOf("分钟")>-1?6e4*l.substr(l.indexOf("分钟")-2,2):0,h=l.indexOf("秒")>-1?1e3*l.substr(l.indexOf("秒")-2,2):0,y=(new Date).getTime()+p+f+d+h;u.date_target=l,u.targetTimeTall=y,t.setIntervalBuyTime=y,t.shoppingMsg.msg=u.detail;var g=u.date_target;if(clearInterval(t.timer),(g=(g=g.split("：")[1]).trim()).indexOf("天")>-1)t.shoppingMsg.time=g;else{console.log("current",g);var m=g.substring(0,2),v=g.substring(4,6),b=g.substring(8,10);t.codeTime(),t.shoppingMsg.time=3600*parseInt(m)+60*parseInt(v)+parseInt(b)}t.buyTimer&&clearInterval(t.buyTimer),e.buyTimer=setInterval((function(){var t=(new Date).getTime()+500;e.setIntervalBuyTime&&t>e.setIntervalBuyTime&&(console.log("start"),e.buy(e.shoppingId,e.sid),clearInterval(e.buyTimer))}),500)}})).catch((function(e){console.log(e),t.buyTipsShow=!0,t.buyTips="网络故障，稍后重试！",t.shoppingMsg.id="",t.shoppingMsg.msg=""}))},buy:function(t,e){var r=this,n={acoundId:t,cookId:e};Object(s.c)(n).then((function(t){r.buyLog="秒杀信息展示："+t.data.msg,localStorage.getItem("user")&&Object(o.d)({user:localStorage.getItem("user"),score:5})}))},goHelp:function(){this.$router.push("./help")},codeTime:function(){var t=this;this.timer=setInterval((function(){t.shoppingMsg.time--,0==t.shoppingMsg.time&&clearInterval(t.timer)}),1e3)},freeTest:function(){alert("阅读帮助，设置好浏览器，即可免费体验！")}}},m=r(3),v=Object(m.a)(g,n,[function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"bannerWrap"},[r("div",{staticClass:"banner1"},[r("h2",[t._v("使用说明"),r("span",{staticStyle:{display:"inline-block","font-size":"16px","margin-left":"15px"}},[t._v("--速度超乎你的想象")])]),t._v(" "),r("p",[t._v("\n                  1:天龙八部畅易阁商品在公示期内无法下单，公示期结束的时间不固定，刷新网页会有"),r("span",{staticStyle:{color:"red"}},[t._v("3")]),t._v("秒左右的随机偏移。\n              ")]),t._v(" "),r("p",[t._v("\n                  2:识别验证码，执行勾选购买操作，一共耗时200毫秒左右，远超手动，\n              ")]),t._v(" "),r("p",[t._v("\n                  3:公示期结束前2秒，就会开始反复执行购买操作，直到抢购成功或者失败。\n              ")]),t._v(" "),r("p",[t._v("\n                  4:如果失败，请查看账号名下是否已经有未付款账号，或者账号被锁定，或者其它。\n              ")]),t._v(" "),r("p",[t._v("\n                  5:游客可以不登录，即可"),r("span",{staticStyle:{color:"red"}},[t._v("体验")]),t._v("账号抢购功能，只要输入正确的sid和商品号，仅限"),r("span",{staticStyle:{color:"red"}},[t._v("交易区")]),t._v("！\n              ")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticStyle:{margin:"0 0 40px"}},[e("a",{attrs:{href:"https://bwtlbb9.gz.bcebos.com/20200826_003247.mp4?authorization=bce-auth-v1/d34049826e8f4689b99579a3d30975ec/2020-08-25T16:38:22Z/-1/host/6800bd923fdd1050b285436bdc0af9503155c2509837e033cbfed8fc2099b993",target:"_blank"}},[this._v("秒杀公示区账号视频演示")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",{staticStyle:{padding:"10px 5px"}},[this._v("秒杀日志")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticStyle:{width:"100%","text-align":"center",margin:"40px 0"}},[this._v("\n           备案号："),e("a",{staticStyle:{color:"grey",display:"inline-block",margin:"0 auto"},attrs:{href:"http://beian.miit.gov.cn/"}},[this._v("湘ICP备17018348号")])])}],!1,null,null,null);v.options.__file="src/view/home.vue";e.default=v.exports}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,